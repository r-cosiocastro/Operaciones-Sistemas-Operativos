/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import objetos.MemoriaSegmentacion;
import objetos.Proceso;
import objetos.Registro;
import objetos.Segmento;
import xlsx.CrearXLSXSegmentacion;

/**
 *
 * @author krawz
 */
public class VistaSegmentacion extends javax.swing.JFrame {

    MemoriaSegmentacion memoriaSegmentacion;
    int ultimoValorCantidadSegmentos = 2;
    int ultimoValorCantidadRegistros = 1;

    DefaultTableModel modelSegmento;
    DefaultTableModel modelRegistro;

    /**
     * Creates new form ViewProcesos
     */
    public VistaSegmentacion() {
        initComponents();

        modelSegmento = new DefaultTableModel(
                new Object[][]{
                    {0, null, null},
                    {1, null, null}
                },
                new String[]{
                    "Segmento", "Base", "Límite"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean[]{
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        jTableSegmento.setModel(modelSegmento);

        modelRegistro = new DefaultTableModel(
                new Object[][]{
                    {null, null, null}
                },
                new String[]{
                    "Registro", "Segmento", "Desplazamiento"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        };
        jTableRegistro.setModel(modelRegistro);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSegmento = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jSpinnerNumSeg = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerNumReg = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableRegistro = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldInicio = new javax.swing.JTextField();
        jTextFieldTamano = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableSegmento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(0), null, null},
                { new Integer(1), null, null}
            },
            new String [] {
                "Segmento", "Base", "Límite"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableSegmento);

        jLabel1.setText("Número de segmentos:");

        jSpinnerNumSeg.setModel(new javax.swing.SpinnerNumberModel(2, 2, 100, 1));
        jSpinnerNumSeg.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerNumSegStateChanged(evt);
            }
        });

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Ubicar segmentos y generar memoria");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Número de registros:");

        jSpinnerNumReg.setModel(new javax.swing.SpinnerNumberModel(1, 1, 50, 1));
        jSpinnerNumReg.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerNumRegStateChanged(evt);
            }
        });

        jTableRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Registro", "Segmento", "Desplazamiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableRegistro);

        jLabel3.setText("Inicio de segmentación:");

        jTextFieldInicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldInicioKeyTyped(evt);
            }
        });

        jTextFieldTamano.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldTamanoKeyTyped(evt);
            }
        });

        jLabel4.setText("Tamaño de memoria:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldTamano, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(jSpinnerNumSeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(177, 177, 177)
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(jSpinnerNumReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jButton1))
                        .addComponent(jSeparator1)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldTamano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jSpinnerNumSeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jSpinnerNumReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (!jTextFieldInicio.getText().isEmpty() && !jTextFieldTamano.getText().isEmpty()) {
            int inicio = Integer.valueOf(jTextFieldInicio.getText());
            int tamano = Integer.valueOf(jTextFieldTamano.getText());
            memoriaSegmentacion = new MemoriaSegmentacion(inicio, tamano);
        }
        System.out.println(tablaCompleta(modelSegmento));
        if (tablaCompleta(modelSegmento)) {
            if (tablaCompleta(modelRegistro)) {
                if (agregarSegmentos()) {
                    if (agregarRegistros()) {
                        memoriaSegmentacion.evaluarSegmentos();
                        memoriaSegmentacion.crearBloques();
                        new CrearXLSXSegmentacion(memoriaSegmentacion);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "ERROR: Llene las tablas o reduzca la cantidad de registros.",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "ERROR: Llene las tablas o reduzca la cantidad de segmentos.",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jSpinnerNumSegStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerNumSegStateChanged
        int cantidadSegmentos = (int) jSpinnerNumSeg.getValue();
        //scrollPane.getViewport().removeAll();
        if (cantidadSegmentos > 0) {
            if (cantidadSegmentos > ultimoValorCantidadSegmentos) {
                agregarFilaSegmentacion(cantidadSegmentos - 1);
            } else {
                quitarFila(modelSegmento, cantidadSegmentos);
            }
        }
        ultimoValorCantidadSegmentos = cantidadSegmentos;
    }//GEN-LAST:event_jSpinnerNumSegStateChanged

    private void jSpinnerNumRegStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerNumRegStateChanged
        // TODO add your handling code here:
        int cantidadRegistros = (int) jSpinnerNumReg.getValue();
        //scrollPane.getViewport().removeAll();
        if (cantidadRegistros > 0) {
            if (cantidadRegistros > ultimoValorCantidadRegistros) {
                agregarFila();
            } else {
                quitarFila(modelRegistro, cantidadRegistros);
            }
        }
        ultimoValorCantidadRegistros = cantidadRegistros;
    }//GEN-LAST:event_jSpinnerNumRegStateChanged

    private void jTextFieldInicioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldInicioKeyTyped
        // TODO add your handling code here:
        char numero = evt.getKeyChar();
        if (!Character.isDigit(numero) && numero != KeyEvent.VK_BACK_SPACE && numero != KeyEvent.VK_DELETE) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jTextFieldInicioKeyTyped

    private void jTextFieldTamanoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTamanoKeyTyped
        // TODO add your handling code here:
        char numero = evt.getKeyChar();
        if (!Character.isDigit(numero) && numero != KeyEvent.VK_BACK_SPACE && numero != KeyEvent.VK_DELETE) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jTextFieldTamanoKeyTyped

    boolean tablaCompleta(DefaultTableModel model) {
        for (int fila = 0; fila < model.getRowCount(); fila++) {
            for (int columna = 0; columna < model.getColumnCount(); columna++) {
                if (model.getValueAt(fila, columna) == null) {
                    return false;
                }
            }
        }
        return true;
    }

    private void agregarFilaSegmentacion(int valor) {
        modelSegmento.addRow(new Object[]{valor, "", ""});
    }

    private void agregarFila() {
        modelRegistro.addRow(new Object[]{"", "", ""});
    }

    private void quitarFila(DefaultTableModel model, int fila) {
        model.removeRow(fila);
    }

    boolean agregarSegmentos() {
        for (int fila = 0; fila < modelSegmento.getRowCount(); fila++) {
            int id = (int) modelSegmento.getValueAt(fila, 0);
            int base = (int) modelSegmento.getValueAt(fila, 1);
            int limite = (int) modelSegmento.getValueAt(fila, 2);
            memoriaSegmentacion.añadirSegmento(new Segmento(memoriaSegmentacion, id, base, limite));
        }
        return true;
    }

    boolean agregarRegistros() {
        for (int fila = 0; fila < modelRegistro.getRowCount(); fila++) {
            Segmento seg;
            String registro = (String) modelRegistro.getValueAt(fila, 0);
            int segmento = (int) modelRegistro.getValueAt(fila, 1);
            if (segmento > memoriaSegmentacion.segmentos.size()) {
                JOptionPane.showMessageDialog(null, "ERROR: El segmento " + segmento + " no existe.",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            } else {
                seg = memoriaSegmentacion.segmentos.get(segmento);
            }
            int desplazamiento = (int) modelRegistro.getValueAt(fila, 2);
            memoriaSegmentacion.añadirRegistro(new Registro(registro, seg, desplazamiento));
        }
        return true;
    }

    private JTextField cuadroTextoNumerico() {
        JTextField textField = new JTextField();
        textField.addKeyListener(new KeyAdapter() {

            @Override
            public void keyTyped(KeyEvent evt) {
                char numero = evt.getKeyChar();
                if (!Character.isDigit(numero) && numero != KeyEvent.VK_BACK_SPACE && numero != KeyEvent.VK_DELETE) {
                    evt.consume();
                    getToolkit().beep();
                }
            }
        });

        return textField;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaSegmentacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaSegmentacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaSegmentacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaSegmentacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaSegmentacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinnerNumReg;
    private javax.swing.JSpinner jSpinnerNumSeg;
    private javax.swing.JTable jTableRegistro;
    private javax.swing.JTable jTableSegmento;
    private javax.swing.JTextField jTextFieldInicio;
    private javax.swing.JTextField jTextFieldTamano;
    // End of variables declaration//GEN-END:variables
}
